# encoding: utf-8

##
# Backup Generated: myapp_mongodb
# Once configured, you can run the backup with the following command:
#
# $ backup perform -t myapp_mongodb [-c <path_to_configuration_file>]
#
Backup::Model.new(:myapp_mongodb, 'Description for myapp_mongodb') do
  ##
  # Split [Splitter]
  #
  # Split the backup file in to chunks of 250 megabytes
  # if the backup file size exceeds 250 megabytes
  #
  split_into_chunks_of 250

  ##
  # MongoDB [Database]
  #
  database MongoDB do |db|
    db.name               = "my_database_name"
    db.username           = "my_username"
    db.password           = "my_password"
    db.host               = "localhost"
    db.port               = 5432
    db.ipv6               = false
    db.only_collections   = ["only", "these" "collections"]
    db.additional_options = []
    db.lock               = false
    # Optional: Use to set the location of these utilities
    #   if they cannot be found by their name in your $PATH
    # db.mongodump_utility = "/opt/local/bin/mongodump"
    # db.mongo_utility     = "/opt/local/bin/mongo"
  end

  ##
  # Rackspace Cloud Files [Storage]
  #
  # Available Auth URLs:
  #
  #  - https://auth.api.rackspacecloud.com     (US - Default)
  #  - https://lon.auth.api.rackspacecloud.com (UK)
  #
  # Servicenet:
  #
  #  Set this to 'true' if Backup runs on a Rackspace server. It will avoid
  #  transfer charges and it's more performant.
  #
  store_with CloudFiles do |cf|
    cf.api_key    = "my_api_key"
    cf.username   = "my_username"
    cf.container  = "my_container"
    cf.path       = "/path/to/my/backups"
    cf.keep       = 5
    cf.auth_url   = "lon.auth.api.rackspacecloud.com"
    cf.servicenet = false
  end

  ##
  # Rackspace Cloud Files [Syncer]
  #
  # Available Auth URLs:
  #
  #  - https://auth.api.rackspacecloud.com     (US - Default)
  #  - https://lon.auth.api.rackspacecloud.com (UK)
  #
  # Servicenet:
  #
  #  Set this to 'true' if Backup runs on a Rackspace server. It will avoid
  #  transfer charges and it's more performant.
  #
  # Mirroring:
  #
  #  When enabled it will keep an exact mirror of your filesystem on Cloud Files. This means
  #  that when you remove a file from the filesystem, it will also remote it from Cloud Files.
  #
  # Concurrency (concurrency_type):
  #
  #  - :threads (recommended)
  #  - :processes
  #  - false
  #
  #  Threads are a good choice for such sync operations and doesn't consume any additional memory.
  #  Using :processes is discouraged as it's likely to consumes a lot of memory.
  #
  # Concurrency (concurrency_level):
  #
  #  Defaults to 2, the higher the level, the faster it will sync.
  #  If you want a high concurrency level (>2), use :threads and not :processes.
  #
  sync_with CloudFiles do |cf|
    cf.username          = "my_username"
    cf.api_key           = "my_api_key"
    cf.container         = "my_container"
    cf.auth_url          = "https://auth.api.rackspacecloud.com"
    cf.servicenet        = false
    cf.path              = "/backups"
    cf.mirror            = true
    cf.concurrency_type  = :threads
    cf.concurrency_level = 50

    cf.directories do |directory|
      directory.add "/path/to/directory/to/sync"
      directory.add "/path/to/other/directory/to/sync"
    end
  end

end
